<div class="main-bar-img"><img src=<%= large_image(@bar) %> />
  <!-- <div class="btn-add"><a href="#"><img src="../app/assets/images/btn-add.png" /></a></div> -->
  <h2><%= @bar.name %></h2>
  <div id="map-canvas"></div>
    <%= image_tag("map.svg", :class => "btn-map", :alt => "view map") %>
		<h4 style="display:none"><%= link_to @bar.name, bar_path(@bar) %></h4>
	  <div id="bar-<%= @bar.id %>" class="bar-addremove btn-add" data-bar_id="<%= @bar.id %>">
	    <img src=<%= image_path('add.svg') %> alt="">
    </div>
	</div>

<section class="bar-info">
  <p class="bar-address"><i class="fa fa-map-marker"></i> <%= @bar.address %></p>
  <p class="bar-tel"><i class="fa fa-chevron-circle-right"></i> <%= @bar.contact_2 %></p>

  <ul>
    <% @bar.specials.each do |special| %>
      <% if special.days_convert.length > 0 %>
        <li><h4 class='special-days'> <%=  special.days_convert %> </h4></li>
        <% if special.duration %>
          <i class="fa fa-clock-o"></i>
          <%= special.duration%>
        <% end %>
        <div class="detail"><%= special.special_details %></div>
      <% end %>
    <% end %>
  </ul>

  <div id="address-geocode" style="display: block;" data-address_for_geocode="<%= @address_for_geocoding %>"></div>
</section>

<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&signed_in=true"></script>
<script>
    // using globals. todo refactor.
    var positionHereLat;
    var positionHereLon;
    var positionBarLat;
    var positionBarLon;
    var distanceToBar;

    $(document).ready ( function(){
        // JLW there is an option for asynchronous loading of the google map.
        // This would be better. Add it time. There is also an option to style the map.
        // Note: This example requires that you consent to location sharing when
        // prompted by your browser. If you see a blank space instead of the map, this
        // is probably because you have denied permission for location sharing.

        // Toggle visibility of Map
        $( ".btn-map" ).on("click", function (){
            $("#map-canvas").toggleClass("visible");
            // code address has to go here. If it runs on document load there are errors. Needs an event.
            codeAddress();
            console.log('positionBarLat: ' + positionBarLat);
            console.log('positionBarLon: ' + positionBarLon);
            console.log('positionHereLat: ' + positionHereLat);
            console.log('positionHereLon: ' + positionHereLon);

            distanceToBar = getDistance(positionBarLat, positionBarLon, positionHereLat,positionHereLon);
            distanceToBar = Math.round(distanceToBar/100) * 100;
            console.log('distanceToBar: ' + distanceToBar);
            $('#bar-distance').html(distanceToBar);
        });

        var geocoder;
        var map;
        function initialize() {
            geocoder = new google.maps.Geocoder();
            //var latlng = new google.maps.LatLng(-34.397, 150.644);
            var mapOptions = {
                zoom: 17,
                disableDefaultUI:true
            };

            var hhStyles = [
                {
                    "featureType": "administrative",
                    "elementType": "labels.text.fill",
                    "stylers": [
                        {
                            "color": "#444444"
                        }
                    ]
                },
                {
                    "featureType": "landscape",
                    "elementType": "all",
                    "stylers": [
                        {
                            "color": "#f2f2f2"
                        }
                    ]
                },
                {
                    "featureType": "poi",
                    "elementType": "all",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "road",
                    "elementType": "all",
                    "stylers": [
                        {
                            "saturation": -100
                        },
                        {
                            "lightness": 45
                        }
                    ]
                },
                {
                    "featureType": "road.highway",
                    "elementType": "all",
                    "stylers": [
                        {
                            "visibility": "simplified"
                        }
                    ]
                },
                {
                    "featureType": "road.arterial",
                    "elementType": "labels.icon",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "transit",
                    "elementType": "all",
                    "stylers": [
                        {
                            "visibility": "off"
                        }
                    ]
                },
                {
                    "featureType": "water",
                    "elementType": "all",
                    "stylers": [
                        {
                            "color": "#46bcec"
                        },
                        {
                            "visibility": "on"
                        }
                    ]
                }
            ];
            map = new google.maps.Map(document.getElementById('map-canvas'), mapOptions);
            map.setOptions({styles: hhStyles});

/*            GeoMarker = new GeolocationMarker();
            GeoMarker.setCircleOptions({fillColor: '#808080'});

            google.maps.event.addListenerOnce(GeoMarker, 'position_changed', function() {
                map.setCenter(this.getPosition());
                map.fitBounds(this.getBounds());
            });

            google.maps.event.addListener(GeoMarker, 'geolocation_error', function(e) {
                alert('There was an error obtaining your position. Message: ' + e.message);
            });
            GeoMarker.setMap(map);*/

            // Try HTML5 geolocation
            if(navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(function(position) {
                    // JLW extracting lat long of here.
                    positionHereLat = position.coords.latitude;
                    positionHereLon = position.coords.longitude;
                    var pos = new google.maps.LatLng(position.coords.latitude,
                            position.coords.longitude);
                    var infowindow = new google.maps.InfoWindow({
                        map: map,
                        position: pos,
                        content: 'You are here'
                    });
                    map.setCenter(pos);
                }, function() {
                    handleNoGeolocation(true);
                });
            } else {
                // Browser doesn't support Geolocation
                handleNoGeolocation(false);
            };
        };
        function handleNoGeolocation(errorFlag) {
            if (errorFlag) {
                var content = 'Error: The Geolocation service failed.';
            } else {
                var content = 'Error: Your browser doesn\'t support geolocation.';
            };
            var options = {
                map: map,
                position: new google.maps.LatLng(60, 105),
                content: content
            };
            var infowindow = new google.maps.InfoWindow(options);
            map.setCenter(options.position);
        };
        // this takes an address as a string, converts it to lat long and puts it on the map and centres.
        function codeAddress() {
            var $addressToGeocode = $('#address-geocode').data('address_for_geocode');
            console.log('code Address is:' + $addressToGeocode);
            geocoder.geocode( { 'address': $addressToGeocode}, function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    map.setCenter(results[0].geometry.location);
                    positionBarLat = results[0]['geometry']['location']['A'];
                    positionBarLon = results[0]['geometry']['location']['F'];
                    var marker = new google.maps.Marker({
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                };
            });
        };

        var rad = function(x) {
            return x * Math.PI / 180;
        };

        var getDistance = function(p1lat, p1lng, p2lat, p2lng) {
            var R = 6378137; // Earthâ€™s mean radius in meter
            var dLat = rad(p2lat - p1lat);
            var dLong = rad(p2lng - p1lng);
            var a = Math.sin(dLat / 2) * Math.sin(dLat / 2) +
                    Math.cos(rad(p1lat)) * Math.cos(rad(p2lat)) *
                    Math.sin(dLong / 2) * Math.sin(dLong / 2);
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));
            var d = R * c;
            return d; // returns the distance in meters
        };
        google.maps.event.addDomListener(window, 'load', initialize);
    });
</script>
